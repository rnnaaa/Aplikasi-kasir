/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package kasir_warmad;

import desain.GradientPanel;
import javax.swing.*;                     // Semua komponen GUI (JFrame, JButton, JTextField, dll)
import javax.swing.table.DefaultTableModel; // Untuk manipulasi tabel (add row, hapus row, dll)
import java.awt.event.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import kasir_warmad.Koneksi;
import com.formdev.flatlaf.intellijthemes.FlatArcOrangeIJTheme;
import java.awt.Font;
import java.sql.Statement;
import javax.swing.UIManager;

/**
 *
 * @author ThinkPad
 */
public class Stok_barang extends javax.swing.JFrame {

    /**
     * Creates new form Transaksi
     */
    public Stok_barang() {
        initComponents();
        IsiKategori();
        IsiBarang();
    }

    private void IsiKategori() {
        try {
            Connection conn = Koneksi.getKoneksi();
            String sql = "SELECT DISTINCT kategori_barang FROM barang_jual";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            PilihkategoriS.removeAllItems();
            while (rs.next()) {
                PilihkategoriS.addItem(rs.getString("kategori_barang"));
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat kategori: " + e.getMessage());
        }
    }

    private void IsiBarang() {
        try {
            Connection conn = Koneksi.getKoneksi();
            String sql = "SELECT nama_barang FROM barang_jual WHERE kategori_barang = ?";
            PreparedStatement ps = conn.prepareStatement(sql);

            String kategoriDipilih = PilihkategoriS.getSelectedItem().toString();
            ps.setString(1, kategoriDipilih);

            ResultSet rs = ps.executeQuery();

            PilihbarangS.removeAllItems();
            while (rs.next()) {
                PilihbarangS.addItem(rs.getString("nama_barang"));
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat barang: " + e.getMessage());

        }
    }
private void loadDataHampirKadaluarsa() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Kode Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Kategori");
        model.addColumn("Stok");
        model.addColumn("Tanggal Kadaluarsa");

        try {
            String sql = "SELECT bj.barcode_barang, bj.nama_barang, bj.kategori_barang, "
                    + "sg.jumlah_stok, sg.tanggal_kadaluarsa "
                    + "FROM stok_gudang sg "
                    + "JOIN barang_jual bj ON sg.id_barang_jual = bj.id_barang_jual "
                    + "WHERE sg.tanggal_kadaluarsa BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) "
                    + "ORDER BY sg.tanggal_kadaluarsa ASC";

            Connection conn = Koneksi.getKoneksi();
            Statement stm = conn.createStatement();
            ResultSet res = stm.executeQuery(sql);

            while (res.next()) {
                model.addRow(new Object[]{
                    res.getString("barcode_barang"),
                    res.getString("nama_barang"),
                    res.getString("kategori_barang"),
                    res.getInt("jumlah_stok"),
                    res.getDate("tanggal_kadaluarsa")
                });
            }

            TabelhampirkadaluarsaS.setModel(model);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error Hampir Kadaluarsa: " + e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new GradientPanel();
        PilihkategoriS = new javax.swing.JComboBox<>();
        PilihbarangS = new javax.swing.JComboBox<>();
        TampilkanstokS = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelS = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        panel1 = new java.awt.Panel();
        DashboardS = new javax.swing.JButton();
        TbarangterlarisK = new javax.swing.JScrollPane();
        TabelhampirkadaluarsaS = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 204, 153));

        PilihkategoriS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PilihkategoriSActionPerformed(evt);
            }
        });

        PilihbarangS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PilihbarangSActionPerformed(evt);
            }
        });

        TampilkanstokS.setText("Tampilkan Stok");
        TampilkanstokS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TampilkanstokSActionPerformed(evt);
            }
        });

        TabelS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Kode Barang", "Nama Barang", "Kategori", "Stok", "Tanggal_Kadaluarsa"
            }
        ));
        jScrollPane1.setViewportView(TabelS);

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Pilih Kategori");

        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Pilih Barang");

        panel1.setBackground(new java.awt.Color(255, 255, 255));

        DashboardS.setFont(new java.awt.Font("Segoe UI Variable", 1, 12)); // NOI18N
        DashboardS.setText("Dashboard");
        DashboardS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DashboardSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DashboardS)
                .addGap(61, 61, 61))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DashboardS)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        TabelhampirkadaluarsaS.setFont(new java.awt.Font("Poppins", java.awt.Font.BOLD, 14)
        );
        TabelhampirkadaluarsaS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TbarangterlarisK.setViewportView(TabelhampirkadaluarsaS);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(292, 292, 292)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(PilihkategoriS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PilihbarangS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138)
                .addComponent(TampilkanstokS)
                .addContainerGap(209, Short.MAX_VALUE))
            .addComponent(TbarangterlarisK)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(TbarangterlarisK, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(PilihbarangS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PilihkategoriS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(TampilkanstokS)
                        .addGap(45, 45, 45)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(179, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TampilkanstokSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TampilkanstokSActionPerformed
        try {
            Connection conn = Koneksi.getKoneksi();
            String sql = "SELECT bj.id_barang_jual, bj.nama_barang, bj.kategori_barang, sg.jumlah_stok, sg.tanggal_kadaluarsa "
                    + "FROM stok_gudang sg "
                    + "JOIN barang_jual bj ON sg.id_barang_jual = bj.id_barang_jual "
                    + "WHERE bj.nama_barang = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, PilihbarangS.getSelectedItem().toString());

            ResultSet rs = ps.executeQuery();

            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("Kode Barang");
            model.addColumn("Nama Barang");
            model.addColumn("Kategori");
            model.addColumn("Stok");
            model.addColumn("Tanggal Kadaluarsa");

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("id_barang_jual"),
                    rs.getString("nama_barang"),
                    rs.getString("kategori_barang"),
                    rs.getInt("jumlah_stok"),
                    rs.getDate("tanggal_kadaluarsa")
                });
            }

            TabelS.setModel(model);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal menampilkan data stok: " + e.getMessage());
        }

    }//GEN-LAST:event_TampilkanstokSActionPerformed

    private void DashboardSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DashboardSActionPerformed
        String role = Session.getCurrentUserRole();
Dashboard da = new Dashboard(role);
da.setVisible(true);
da.pack();
da.setLocationRelativeTo(null);
dispose();

    }//GEN-LAST:event_DashboardSActionPerformed

    private void PilihkategoriSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PilihkategoriSActionPerformed
        IsiBarang();
    }//GEN-LAST:event_PilihkategoriSActionPerformed

    private void PilihbarangSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PilihbarangSActionPerformed

    }//GEN-LAST:event_PilihbarangSActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    loadDataHampirKadaluarsa();        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(new FlatArcOrangeIJTheme());
            UIManager.put("Button.arc", 999);
            UIManager.put("defaultFont", new Font("Poppins", Font.BOLD, 14));
            Object put = UIManager.put("Component.arrowType", "triangle");
        } catch (Exception ex) {
            System.err.println("Gagal mengatur tema FlatLaf Arc Orange.");
            ex.printStackTrace();
        }

        /* Jalankan GUI di Event Dispatch Thread */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Stok_barang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DashboardS;
    private javax.swing.JComboBox<String> PilihbarangS;
    private javax.swing.JComboBox<String> PilihkategoriS;
    private javax.swing.JTable TabelS;
    private javax.swing.JTable TabelhampirkadaluarsaS;
    private javax.swing.JButton TampilkanstokS;
    private javax.swing.JScrollPane TbarangterlarisK;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables
}
